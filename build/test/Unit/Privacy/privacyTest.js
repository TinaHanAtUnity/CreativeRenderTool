import { assert } from 'chai';
import 'mocha';
import { UserPrivacy } from 'Privacy/Privacy';
describe('UserPrivacy', () => {
    context('permissionsEql', () => {
        it('return true when permissions are equal', () => {
            assert.isTrue(UserPrivacy.permissionsEql(UserPrivacy.PERM_ALL_FALSE, UserPrivacy.PERM_ALL_FALSE));
            assert.isTrue(UserPrivacy.permissionsEql(UserPrivacy.PERM_ALL_TRUE, UserPrivacy.PERM_ALL_TRUE));
            assert.isTrue(UserPrivacy.permissionsEql(UserPrivacy.PERM_OPTIN_LEGITIMATE_INTEREST, UserPrivacy.PERM_OPTIN_LEGITIMATE_INTEREST));
        });
        it('returns false when permissions are NOT equal', () => {
            assert.isFalse(UserPrivacy.permissionsEql(UserPrivacy.PERM_ALL_FALSE, UserPrivacy.PERM_ALL_TRUE));
            assert.isFalse(UserPrivacy.permissionsEql(UserPrivacy.PERM_ALL_TRUE, UserPrivacy.PERM_ALL_FALSE));
            assert.isFalse(UserPrivacy.permissionsEql(UserPrivacy.PERM_ALL_FALSE, UserPrivacy.PERM_OPTIN_LEGITIMATE_INTEREST));
        });
    });
    context('Preset permissions', () => {
        it('are immutable', () => {
            assert.isFrozen(UserPrivacy.PERM_ALL_FALSE);
            assert.isFrozen(UserPrivacy.PERM_ALL_TRUE);
            assert.isFrozen(UserPrivacy.PERM_SKIPPED_LEGITIMATE_INTEREST);
            assert.isFrozen(UserPrivacy.PERM_OPTIN_LEGITIMATE_INTEREST);
            assert.isFrozen(UserPrivacy.PERM_DEVELOPER_CONSENTED);
            assert.throws(() => {
                UserPrivacy.PERM_ALL_TRUE.ads = false;
            });
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmFjeVRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZXN0L1VuaXQvUHJpdmFjeS9wcml2YWN5VGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzlCLE9BQU8sT0FBTyxDQUFDO0FBQ2YsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTlDLFFBQVEsQ0FBRSxhQUFhLEVBQUUsR0FBRyxFQUFFO0lBQzFCLE9BQU8sQ0FBRSxnQkFBZ0IsRUFBRSxHQUFHLEVBQUU7UUFDNUIsRUFBRSxDQUFFLHdDQUF3QyxFQUFFLEdBQUcsRUFBRTtZQUMvQyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztZQUNsRyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNoRyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLDhCQUE4QixFQUFFLFdBQVcsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUM7UUFDdEksQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUUsOENBQThDLEVBQUUsR0FBRyxFQUFFO1lBQ3JELE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQ2xHLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1lBQ2xHLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUM7UUFDdkgsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sQ0FBRSxvQkFBb0IsRUFBRSxHQUFHLEVBQUU7UUFDaEMsRUFBRSxDQUFFLGVBQWUsRUFBRSxHQUFHLEVBQUU7WUFDdEIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDNUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDM0MsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztZQUM5RCxNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1lBQzVELE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLHdCQUF3QixDQUFDLENBQUM7WUFDdEQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7Z0JBQ2YsV0FBVyxDQUFDLGFBQWEsQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO1lBQzFDLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIn0=
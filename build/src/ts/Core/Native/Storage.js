import { EventCategory } from 'Core/Constants/EventCategory';
import { ApiPackage, NativeApi } from 'Core/Native/Bridge/NativeApi';
import { Observable2 } from 'Core/Utilities/Observable';
export var StorageType;
(function (StorageType) {
    StorageType[StorageType["PRIVATE"] = 0] = "PRIVATE";
    StorageType[StorageType["PUBLIC"] = 1] = "PUBLIC";
})(StorageType || (StorageType = {}));
export var StorageError;
(function (StorageError) {
    StorageError[StorageError["COULDNT_SET_VALUE"] = 0] = "COULDNT_SET_VALUE";
    StorageError[StorageError["COULDNT_GET_VALUE"] = 1] = "COULDNT_GET_VALUE";
    StorageError[StorageError["COULDNT_WRITE_STORAGE_TO_CACHE"] = 2] = "COULDNT_WRITE_STORAGE_TO_CACHE";
    StorageError[StorageError["COULDNT_CLEAR_STORAGE"] = 3] = "COULDNT_CLEAR_STORAGE";
    StorageError[StorageError["COULDNT_GET_STORAGE"] = 4] = "COULDNT_GET_STORAGE";
    StorageError[StorageError["COULDNT_DELETE_VALUE"] = 5] = "COULDNT_DELETE_VALUE";
})(StorageError || (StorageError = {}));
export var StorageEvent;
(function (StorageEvent) {
    StorageEvent[StorageEvent["SET"] = 0] = "SET";
})(StorageEvent || (StorageEvent = {}));
export class StorageApi extends NativeApi {
    constructor(nativeBridge) {
        super(nativeBridge, 'Storage', ApiPackage.CORE, EventCategory.STORAGE);
        this.onSet = new Observable2();
    }
    read(type) {
        return this._nativeBridge.invoke(this._fullApiClassName, 'read', [StorageType[type]]);
    }
    write(type) {
        return this._nativeBridge.invoke(this._fullApiClassName, 'write', [StorageType[type]]);
    }
    get(type, key) {
        return this._nativeBridge.invoke(this._fullApiClassName, 'get', [StorageType[type], key]);
    }
    set(type, key, value) {
        return this._nativeBridge.invoke(this._fullApiClassName, 'set', [StorageType[type], key, value]);
    }
    delete(type, key) {
        return this._nativeBridge.invoke(this._fullApiClassName, 'delete', [StorageType[type], key]);
    }
    clear(type) {
        return this._nativeBridge.invoke(this._fullApiClassName, 'clear', [StorageType[type]]);
    }
    getKeys(type, key, recursive) {
        return this._nativeBridge.invoke(this._fullApiClassName, 'getKeys', [StorageType[type], key, recursive]);
    }
    handleEvent(event, parameters) {
        switch (event) {
            case StorageEvent[StorageEvent.SET]:
                this.onSet.trigger(parameters[0], parameters[1]);
                break;
            default:
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90cy9Db3JlL05hdGl2ZS9TdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRXJFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV4RCxNQUFNLENBQU4sSUFBWSxXQUdYO0FBSEQsV0FBWSxXQUFXO0lBQ25CLG1EQUFPLENBQUE7SUFDUCxpREFBTSxDQUFBO0FBQ1YsQ0FBQyxFQUhXLFdBQVcsS0FBWCxXQUFXLFFBR3RCO0FBRUQsTUFBTSxDQUFOLElBQVksWUFPWDtBQVBELFdBQVksWUFBWTtJQUNwQix5RUFBaUIsQ0FBQTtJQUNqQix5RUFBaUIsQ0FBQTtJQUNqQixtR0FBOEIsQ0FBQTtJQUM5QixpRkFBcUIsQ0FBQTtJQUNyQiw2RUFBbUIsQ0FBQTtJQUNuQiwrRUFBb0IsQ0FBQTtBQUN4QixDQUFDLEVBUFcsWUFBWSxLQUFaLFlBQVksUUFPdkI7QUFFRCxNQUFNLENBQU4sSUFBWSxZQUVYO0FBRkQsV0FBWSxZQUFZO0lBQ3BCLDZDQUFHLENBQUE7QUFDUCxDQUFDLEVBRlcsWUFBWSxLQUFaLFlBQVksUUFFdkI7QUFFRCxNQUFNLE9BQU8sVUFBVyxTQUFRLFNBQVM7SUFHckMsWUFBWSxZQUEwQjtRQUNsQyxLQUFLLENBQUMsWUFBWSxFQUFFLFNBQVMsRUFBRSxVQUFVLENBQUMsSUFBSSxFQUFFLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUhwRSxVQUFLLEdBQWdDLElBQUksV0FBVyxFQUFFLENBQUM7SUFJOUQsQ0FBQztJQUVNLElBQUksQ0FBQyxJQUFpQjtRQUN6QixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFPLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxNQUFNLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBaUI7UUFDMUIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBTyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRyxDQUFDO0lBRU0sR0FBRyxDQUFJLElBQWlCLEVBQUUsR0FBVztRQUN4QyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNqRyxDQUFDO0lBRU0sR0FBRyxDQUFJLElBQWlCLEVBQUUsR0FBVyxFQUFFLEtBQVE7UUFDbEQsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBTyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzNHLENBQUM7SUFFTSxNQUFNLENBQUMsSUFBaUIsRUFBRSxHQUFXO1FBQ3hDLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQU8sSUFBSSxDQUFDLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3ZHLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBaUI7UUFDMUIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBTyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRyxDQUFDO0lBRU0sT0FBTyxDQUFDLElBQWlCLEVBQUUsR0FBVyxFQUFFLFNBQWtCO1FBQzdELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQVcsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUN2SCxDQUFDO0lBRU0sV0FBVyxDQUFDLEtBQWEsRUFBRSxVQUFxQjtRQUNuRCxRQUFRLEtBQUssRUFBRTtZQUNYLEtBQUssWUFBWSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUM7Z0JBQy9CLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFTLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBVSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakUsTUFBTTtZQUVWLFFBQVE7U0FDWDtJQUNMLENBQUM7Q0FDSiJ9